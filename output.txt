pushn 3
start

pushi 5
storeg 0

pushi 2
storeg 1

pushg 0
pushg 1
mul
storeg 2

pushg 2
pusha square
call

storeg 2
pushg 2
pushi 50
sup
jz else1
pushg 2
pushi 10
mul
storeg 2
jump endif1
else1:
pushg 2
pushi 10
div
storeg 2
endif1:
while2:
pushs " the value of z "
writes

pushg 2
writei
pushs " "
writes
pushg 2
pushi 10
add
dup 1
storeg 2
pushg 2
pushi 1050
inf
jz endwhile2
jump while2
endwhile2:
stop

square:
pushfp
load -1
dup 1
mul
return

